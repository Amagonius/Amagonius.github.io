<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Unity学习之路：简介</title>
    <url>/2020/09/22/Unity%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/</url>
    <content><![CDATA[<h2 id="关于Unity"><a href="#关于Unity" class="headerlink" title="关于Unity"></a>关于Unity</h2><p>Unity 3D 也称 Unity，是由 Unity Technologies 公司开发的一个让玩家轻松创建诸如三维视频游戏、建筑可视化、实时三维动画等类型互动内容的多平台的综合型游戏开发工具。</p>
<p>Unity 3D 可以运行在 Windows 和 MacOS X 下，可将游戏发布至 Windows、Mac、Wii、iPhone、WebGL（需要 HTML5）和 Android 等平台。也可以凭借 Unity Web Player 插件发布网页游戏，支持 Mac 和 Windows 平台的网页浏览，是一个全面整合的专业游戏引擎。</p>
<p>业界现有的商用游戏引擎和免费游戏引擎数不胜数。其中最具代表性的商用游戏引擎有 UnReal、CryENGINE、Havok Physics、Game Bryo、Source Engine 等，但是这些游戏引擎不仅名气高，价格也高，大幅增加了游戏开发成本。而 Unity 公司提出了“大众游戏开发”（Democratizing Development）的口号，提供了任何人都可以轻松开发的优秀游戏引擎，这让价格对部分开发方来说不再是一道坎。</p>
<p>Unity 的中文意思为“团结”。Unity 的核心含义是想告诉大家，游戏开发需要在团队合作基础上相互配合完成。</p>
<p>时至今日，游戏市场上出现了众多种类的游戏，它们是由不同的游戏引擎开发的，Unity 3D 以其强大的跨平台特性与绚丽的 3D 渲染效果跨足游戏引擎前列，所以现在很多商业游戏及虚拟现实产品都采用 Unity 3D 引擎来开发。</p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Unity</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始Vue项目实战（四）</title>
    <url>/2020/03/03/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8BVue%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>从零开始Vue项目实战（三）</title>
    <url>/2020/03/02/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8BVue%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<h2 id="登录注册模块"><a href="#登录注册模块" class="headerlink" title="登录注册模块"></a>登录注册模块</h2><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="symbol">&lt;template&gt;</span></span><br><span class="line">    &lt;cube-form</span><br><span class="line">            :model=<span class="string">"model"</span></span><br><span class="line">            :schema=<span class="string">"schema"</span></span><br><span class="line">            @submit=<span class="string">"submitHandler"</span>&gt;&lt;/cube-form&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="symbol">&lt;script&gt;</span></span><br><span class="line">    export default &#123;</span><br><span class="line">        name: <span class="string">"Login"</span>,</span><br><span class="line">        data()&#123;</span><br><span class="line">            <span class="keyword">return</span>&#123;</span><br><span class="line">                <span class="keyword">mode</span><span class="variable">l:</span>&#123;</span><br><span class="line">                    username:<span class="string">''</span>,</span><br><span class="line">                    password:<span class="string">''</span></span><br><span class="line">                &#125;,</span><br><span class="line">                schem<span class="variable">a:</span>&#123;</span><br><span class="line">                    field<span class="variable">s:</span>[</span><br><span class="line">                        &#123;//用户名配置</span><br><span class="line">                            <span class="built_in">type</span>:<span class="string">'input'</span>,</span><br><span class="line">                            modelKey:<span class="string">'username'</span>,</span><br><span class="line">                            labe<span class="variable">l:</span><span class="string">'用户名'</span>,</span><br><span class="line">                            prop<span class="variable">s:</span>&#123;</span><br><span class="line">                                placeholder:<span class="string">'请输入用户名'</span>,</span><br><span class="line">                            &#125;,</span><br><span class="line">                            rule<span class="variable">s:</span>&#123;</span><br><span class="line">                                //校验规则</span><br><span class="line">                                require:true,</span><br><span class="line">                                <span class="built_in">type</span>:<span class="string">'string'</span>,</span><br><span class="line">                                <span class="built_in">min</span>:<span class="number">3</span>,</span><br><span class="line">                                <span class="built_in">max</span>:<span class="number">15</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                            trigger:<span class="string">'blur'</span>,  //失焦触发</span><br><span class="line">                            message:&#123;</span><br><span class="line">                                require:<span class="string">'用户名不能为空'</span>,</span><br><span class="line">                                <span class="built_in">min</span>:<span class="string">'用户名不能少于3个字符'</span>,</span><br><span class="line">                                <span class="built_in">max</span>:<span class="string">'用户名不能多于15个字符'</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;//密码配置</span><br><span class="line">                            <span class="built_in">type</span>:<span class="string">'input'</span>,</span><br><span class="line">                            modelKey:<span class="string">'password'</span>,</span><br><span class="line">                            labe<span class="variable">l:</span><span class="string">'密码'</span>,</span><br><span class="line">                            prop<span class="variable">s:</span>&#123;</span><br><span class="line">                                placeholder:<span class="string">'请输入密码'</span>,</span><br><span class="line">                                <span class="built_in">type</span>:<span class="string">'password'</span>,</span><br><span class="line">                                eye:&#123;</span><br><span class="line">                                    <span class="keyword">open</span>:false</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;,</span><br><span class="line">                            rule<span class="variable">s:</span>&#123;</span><br><span class="line">                                //校验规则</span><br><span class="line">                                require:true,</span><br><span class="line">                            &#125;,</span><br><span class="line">                            trigger:<span class="string">'blur'</span>,  //失焦触发</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">type</span>:<span class="string">'submit'</span>,</span><br><span class="line">                            labe<span class="variable">l:</span><span class="string">'登录'</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        method<span class="variable">s:</span>&#123;</span><br><span class="line">            async submitHandler(<span class="keyword">e</span>)&#123;</span><br><span class="line">                <span class="keyword">e</span>.preventDefault()</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    const result=await this.$http.<span class="built_in">get</span>(<span class="string">'/api/login'</span>,&#123;</span><br><span class="line">                        param<span class="variable">s:this</span>.model</span><br><span class="line">                    &#125;)</span><br><span class="line">                    <span class="keyword">if</span>(result.code===<span class="number">0</span>)&#123;</span><br><span class="line">                        this.$store.commit(<span class="string">'setToken'</span>,result.token)</span><br><span class="line">                        window.localStorage.setItem(<span class="string">'token'</span>,result.token)</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        alert(result.message)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">                    console.<span class="built_in">log</span>(err)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>登录接口<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">let tokenkey=<span class="string">'december'</span></span><br><span class="line">app.<span class="keyword">get</span>(<span class="string">'/api/login'</span>,(req,res)=&gt;&#123;</span><br><span class="line">    const &#123;username,<span class="keyword">password</span>&#125;=req.query</span><br><span class="line">    <span class="keyword">if</span>(username===<span class="string">'qqqq'</span>&amp;&amp;<span class="keyword">password</span>===<span class="string">'123456'</span>||username===<span class="string">'aaaa'</span>&amp;&amp;<span class="keyword">password</span>===<span class="string">'123456'</span>)&#123;</span><br><span class="line">        res.json(&#123;</span><br><span class="line">            code:<span class="number">0</span>,</span><br><span class="line">            message:<span class="string">'登录成功'</span>,</span><br><span class="line">            token:tokenkey+<span class="string">'-'</span>+username+<span class="string">'-'</span>+(<span class="built_in">new</span> <span class="type">Date</span>().getTime()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.json(&#123;</span><br><span class="line">            code:<span class="number">1</span>,</span><br><span class="line">            message:<span class="string">'账号或密码错误'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h4 id="Mock数据"><a href="#Mock数据" class="headerlink" title="Mock数据"></a>Mock数据</h4></li>
<li>用户数据库<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">let userDB=[</span><br><span class="line">    &#123;<span class="string">username:</span><span class="string">'qqqq'</span>,<span class="string">password:</span><span class="string">'123456'</span>&#125;,</span><br><span class="line">    &#123;<span class="string">username:</span><span class="string">'aaaa'</span>,<span class="string">password:</span><span class="string">'123456'</span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="注册模块"><a href="#注册模块" class="headerlink" title="注册模块"></a>注册模块</h4><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="symbol">&lt;template&gt;</span></span><br><span class="line">    &lt;cube-form</span><br><span class="line">            :model=<span class="string">"model"</span></span><br><span class="line">            :schema=<span class="string">"schema"</span></span><br><span class="line">            @submit=<span class="string">"submitHandler"</span>&gt;&lt;/cube-form&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="symbol">&lt;script&gt;</span></span><br><span class="line">    export default &#123;</span><br><span class="line">        name: <span class="string">"Register"</span>,</span><br><span class="line">        data()&#123;</span><br><span class="line">            <span class="keyword">return</span>&#123;</span><br><span class="line">                <span class="keyword">mode</span><span class="variable">l:</span>&#123;</span><br><span class="line">                    username:<span class="string">''</span>,</span><br><span class="line">                    password:<span class="string">''</span></span><br><span class="line">                &#125;,</span><br><span class="line">                schem<span class="variable">a:</span>&#123;</span><br><span class="line">                    field<span class="variable">s:</span>[</span><br><span class="line">                        &#123;//用户名配置</span><br><span class="line">                            <span class="built_in">type</span>:<span class="string">'input'</span>,</span><br><span class="line">                            modelKey:<span class="string">'username'</span>,</span><br><span class="line">                            labe<span class="variable">l:</span><span class="string">'用户名'</span>,</span><br><span class="line">                            prop<span class="variable">s:</span>&#123;</span><br><span class="line">                                placeholder:<span class="string">'请输入用户名'</span>,</span><br><span class="line">                            &#125;,</span><br><span class="line">                            rule<span class="variable">s:</span>&#123;</span><br><span class="line">                                //校验规则</span><br><span class="line">                                require:true,</span><br><span class="line">                                <span class="built_in">type</span>:<span class="string">'string'</span>,</span><br><span class="line">                                <span class="built_in">min</span>:<span class="number">3</span>,</span><br><span class="line">                                <span class="built_in">max</span>:<span class="number">15</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                            trigger:<span class="string">'blur'</span>,  //失焦触发</span><br><span class="line">                            message:&#123;</span><br><span class="line">                                require:<span class="string">'用户名不能为空'</span>,</span><br><span class="line">                                <span class="built_in">min</span>:<span class="string">'用户名不能少于3个字符'</span>,</span><br><span class="line">                                <span class="built_in">max</span>:<span class="string">'用户名不能多于15个字符'</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;//密码配置</span><br><span class="line">                            <span class="built_in">type</span>:<span class="string">'input'</span>,</span><br><span class="line">                            modelKey:<span class="string">'password'</span>,</span><br><span class="line">                            labe<span class="variable">l:</span><span class="string">'密码'</span>,</span><br><span class="line">                            prop<span class="variable">s:</span>&#123;</span><br><span class="line">                                placeholder:<span class="string">'请输入密码'</span>,</span><br><span class="line">                                <span class="built_in">type</span>:<span class="string">'password'</span>,</span><br><span class="line">                                eye:&#123;</span><br><span class="line">                                    <span class="keyword">open</span>:false</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;,</span><br><span class="line">                            rule<span class="variable">s:</span>&#123;</span><br><span class="line">                                //校验规则</span><br><span class="line">                                require:true,</span><br><span class="line">                            &#125;,</span><br><span class="line">                            trigger:<span class="string">'blur'</span>,  //失焦触发</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">type</span>:<span class="string">'submit'</span>,</span><br><span class="line">                            labe<span class="variable">l:</span><span class="string">'注册'</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        method<span class="variable">s:</span>&#123;</span><br><span class="line">            submitHandler(<span class="keyword">e</span>)&#123;</span><br><span class="line">                <span class="keyword">e</span>.preventDefault()</span><br><span class="line">                this.$http.<span class="built_in">get</span>(<span class="string">'/api/register'</span>,&#123;</span><br><span class="line">                    param<span class="variable">s:this</span>.model</span><br><span class="line">                &#125;).then(<span class="keyword">res</span>=&gt;&#123;</span><br><span class="line">                    console.<span class="built_in">log</span>(<span class="keyword">res</span>.success)</span><br><span class="line">                &#125;).<span class="keyword">catch</span>(err=&gt;&#123;</span><br><span class="line">                    console.<span class="built_in">log</span>(err)</span><br><span class="line">                &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>注册接口<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"> app.get(<span class="string">'/api/register'</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;username,password&#125;=req.query</span><br><span class="line">    <span class="keyword">const</span> userLength=userDB.filter(<span class="function"><span class="params">v</span>=&gt;</span>v.username===username).length</span><br><span class="line">    <span class="keyword">if</span>(userLength&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        res.json(&#123;</span><br><span class="line">            success:<span class="literal">false</span>,</span><br><span class="line">            message:<span class="string">'该用户已存在'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.json(&#123;</span><br><span class="line">            success:<span class="literal">true</span>,</span><br><span class="line">            message:<span class="string">'注册成功'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h4 id="全局拦截"><a href="#全局拦截" class="headerlink" title="全局拦截"></a>全局拦截</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//http全局拦截，token通过header返回给后端</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">setAxios</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    axios.interceptors.request.use(</span><br><span class="line">        config=&gt;&#123;</span><br><span class="line">            <span class="keyword">if</span>(store.state.token)&#123;</span><br><span class="line">                config.headers.token=store.state.token</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> config</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    axios.interceptors.response.use(</span><br><span class="line">        response=&gt;&#123;</span><br><span class="line">            <span class="keyword">if</span>(response.status===<span class="number">200</span>)&#123;</span><br><span class="line">                <span class="keyword">const</span> data=response.data</span><br><span class="line">                <span class="keyword">if</span>(data.code===<span class="number">-1</span>)&#123;</span><br><span class="line">                    <span class="comment">//登录过期，重新登录，清空token</span></span><br><span class="line">                    store.commit(<span class="string">'setToken'</span>,<span class="string">''</span>)</span><br><span class="line">                    localStorage.removeItem(<span class="string">'token'</span>)</span><br><span class="line">                    router.replace(&#123;<span class="attr">path</span>:<span class="string">'/login'</span>&#125;)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> data</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Store配置"><a href="#Store配置" class="headerlink" title="Store配置"></a>Store配置</h4><figure class="highlight pf"><table><tr><td class="code"><pre><span class="line">export <span class="keyword">default</span> new Vuex.Store(&#123;</span><br><span class="line">  <span class="keyword">state</span>: &#123;</span><br><span class="line">    token:''</span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    <span class="built_in">set</span>Token(<span class="keyword">state</span>,token)&#123;</span><br><span class="line">      <span class="keyword">state</span>.token=token</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  actions: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  modules: &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h4 id="路由配置"><a href="#路由配置" class="headerlink" title="路由配置"></a>路由配置</h4><figure class="highlight xl"><table><tr><td class="code"><pre><span class="line">const routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">path</span>: <span class="string">'/'</span>,</span><br><span class="line">    redirect:&#123;</span><br><span class="line">      <span class="keyword">name</span>:<span class="string">'/login'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">path</span>: <span class="string">'/register'</span>,</span><br><span class="line">    <span class="keyword">name</span>: <span class="string">'Register'</span>,</span><br><span class="line">    component: Register</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">path</span>: <span class="string">'/login'</span>,</span><br><span class="line">    <span class="keyword">name</span>: <span class="string">'Login'</span>,</span><br><span class="line">    <span class="comment">//懒加载</span></span><br><span class="line">    component: () =&gt; <span class="keyword">import</span>( '../views/Login.vue')</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始Vue项目实战（二）</title>
    <url>/2020/03/01/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8BVue%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h2 id="Vue2-x与Vue3-x"><a href="#Vue2-x与Vue3-x" class="headerlink" title="Vue2.x与Vue3.x"></a>Vue2.x与Vue3.x</h2><h4 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h4><h6 id="node环境"><a href="#node环境" class="headerlink" title="node环境"></a>node环境</h6><ul>
<li><p>官网直接安装，命令行输入node -v显示版本号即安装成功</p>
</li>
<li><p>node自带npm包管理工具，也可以使用国内淘宝镜像cnpm</p>
<h6 id="安装webpack"><a href="#安装webpack" class="headerlink" title="安装webpack"></a>安装webpack</h6><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> webpack -g</span><br></pre></td></tr></table></figure>
<h6 id="关于vue-cli"><a href="#关于vue-cli" class="headerlink" title="关于vue-cli"></a>关于vue-cli</h6><p>Vue CLI 是一个基于 Vue.js 进行快速开发的完整系统，提供：</p>
</li>
<li><p>通过 @vue/cli 搭建交互式的项目脚手架。</p>
</li>
<li><p>通过 @vue/cli + @vue/cli-service-global 快速开始零配置原型开发。</p>
</li>
<li><p>一个运行时依赖 (@vue/cli-service)，该依赖：</p>
<ul>
<li>可升级；</li>
<li>基于 webpack 构建，并带有合理的默认配置；</li>
<li>可以通过项目内的配置文件进行配置；</li>
<li>可以通过插件进行扩展。</li>
<li>一个丰富的官方插件集合，集成了前端生态中最好的工具。<h6 id="安装vue-cli-2-x"><a href="#安装vue-cli-2-x" class="headerlink" title="安装vue-cli 2.x"></a>安装vue-cli 2.x</h6><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">npm install vue-<span class="keyword">cli</span> -<span class="keyword">g</span></span><br><span class="line">vue init webpack 项目名       <span class="comment">//创建项目</span></span><br><span class="line">npm <span class="keyword">run</span> dev                   <span class="comment">//启动项目</span></span><br></pre></td></tr></table></figure>
<h6 id="安装vue-cli-3-x"><a href="#安装vue-cli-3-x" class="headerlink" title="安装vue-cli 3.x"></a>安装vue-cli 3.x</h6><pre><code>npm install @vue/cli -g
vue create 项目名             //创建项目
npm run serve                 //启动项目</code></pre><h4 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h4></li>
</ul>
</li>
</ul>
<p><img src="http://q6gqxr6ux.bkt.clouddn.com/vue3.0%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84.png" alt="vue3.0"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始Vue项目实战（一）</title>
    <url>/2020/03/01/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8BVue%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="准备篇"><a href="#准备篇" class="headerlink" title="准备篇"></a>准备篇</h2><p>从上一次参与Vue项目开发至今已有几月，感觉大部分东西都忘了，所以为了回忆和巩固决定完整的做一个Vue的实战项目，重新开始学习，在此记录。</p>
<h4 id="项目说明"><a href="#项目说明" class="headerlink" title="项目说明"></a>项目说明</h4><p>单页面仿京东电商</p>
<h4 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h4><h6 id="项目构建工具vue-cli"><a href="#项目构建工具vue-cli" class="headerlink" title="项目构建工具vue-cli"></a>项目构建工具vue-cli</h6><p>vue-cli是一个脚手架工具，为我们搭建了开发所需要的环境和生成目录结构</p>
<h6 id="路由vue-router"><a href="#路由vue-router" class="headerlink" title="路由vue-router"></a>路由vue-router</h6><p>路由是单页应用的核心插件</p>
<h6 id="状态管理vuex"><a href="#状态管理vuex" class="headerlink" title="状态管理vuex"></a>状态管理vuex</h6><p>状态管理库，小项目可以使用bus</p>
<h6 id="http请求工具axios"><a href="#http请求工具axios" class="headerlink" title="http请求工具axios"></a>http请求工具axios</h6><p>一个经过ES6的promise封装的ajax</p>
<h6 id="mockjs"><a href="#mockjs" class="headerlink" title="mockjs"></a>mockjs</h6><p>模拟接口返回的数据，前后端分离</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>SublimeText 3相关配置</title>
    <url>/2020/02/29/SublimeText-3%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="Sublime介绍安装和使用"><a href="#Sublime介绍安装和使用" class="headerlink" title="Sublime介绍安装和使用"></a>Sublime介绍安装和使用</h2><h4 id="Sublime介绍"><a href="#Sublime介绍" class="headerlink" title="Sublime介绍"></a>Sublime介绍</h4><p>Sublime是一款跨平台、收费的文件编辑器，可以用来编写HTML,CSS,JavaScript,PHP等应用程序。</p>
<h4 id="Sublime特点"><a href="#Sublime特点" class="headerlink" title="Sublime特点"></a>Sublime特点</h4><p>跨平台,支持主流操作系统,包括macOS,Linux(Ubuntu),Windows<br>体积小，速度快<br>扩展性强，支持众多插件<br>支持编译功能，可以在控制台查看输出</p>
<h4 id="Sublime下载安装"><a href="#Sublime下载安装" class="headerlink" title="Sublime下载安装"></a>Sublime下载安装</h4><p>下载地址:<a href="https://www.sublimetext.com/" target="_blank" rel="noopener">https://www.sublimetext.com/</a></p>
<p>当你使用浏览器访问该地址时，会检测你操作系统的版本后提示你下载对应版本的Sublime，</p>
<p>如果想下载其他操作系统的版本，请访问<a href="https://www.sublimetext.com/3" target="_blank" rel="noopener">https://www.sublimetext.com/3</a></p>
<p>安装注意事项:</p>
<p>安装路径不能带中文和特殊字符<br>必须安装在本地磁盘，不能安装在移动硬盘或者U盘</p>
<h2 id="Sublime配置与插件安装"><a href="#Sublime配置与插件安装" class="headerlink" title="Sublime配置与插件安装"></a>Sublime配置与插件安装</h2><p> Sublime的强大之处就在于通过各种插件实现强大的可扩展性</p>
<h4 id="插件安装方式一：直接安装"><a href="#插件安装方式一：直接安装" class="headerlink" title="插件安装方式一：直接安装"></a>插件安装方式一：直接安装</h4><p> 下载安装包解压缩到：菜单-&gt;preferences-&gt;packages目录即可</p>
<h4 id="插件安装方式二：使用Package-Control组件安装"><a href="#插件安装方式二：使用Package-Control组件安装" class="headerlink" title="插件安装方式二：使用Package Control组件安装"></a>插件安装方式二：使用Package Control组件安装</h4><p> 按Ctrl+`调出console<br> 输入代码：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request,os; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); <span class="keyword">open</span>(os.path.<span class="keyword">join</span>(ipp, pf), <span class="string">'wb'</span>).<span class="keyword">write</span>(urllib.request.urlopen( <span class="string">'http://sublime.wbond.net/'</span> + pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).<span class="keyword">read</span>())</span><br></pre></td></tr></table></figure>
<p>重启Sublime Text 3。如果在Perferences-&gt;package settings中看到package control这一项，则安装成功。按下Ctrl+Shift+P调出命令面板输入install 调出 Install Package 选项并回车，然后在列表中选中要安装的插件。遇到无法安装可用插件问题，可remove掉Package Control重新安装下；如遇到连Package Control也无法安装，则可以在别处拷贝一份关于Package Control的文件(Package Control.sublime-package)存放于Installed Packages目录之下即可。</p>
<h4 id="Sublime汉化"><a href="#Sublime汉化" class="headerlink" title="Sublime汉化"></a>Sublime汉化</h4><p>输入快捷键 Ctrl+Shift+P 在出现的文本框中输入Install Package(或直接输入“ip”)选中packageControl：Install Package并回车 ，然后在输入框中输入“localization”就会发现汉化语言的相关插件，点选安装即可。</p>
<h2 id="Sublime插件推荐"><a href="#Sublime插件推荐" class="headerlink" title="Sublime插件推荐"></a>Sublime插件推荐</h2><h4 id="MarkDown-Editing"><a href="#MarkDown-Editing" class="headerlink" title="MarkDown Editing"></a>MarkDown Editing</h4><p>使用Sublime编辑MarkDown文件不失为好的选择，但是就个人而言，VsCode会是更好的选择</p>
<h4 id="ColorPicker"><a href="#ColorPicker" class="headerlink" title="ColorPicker"></a>ColorPicker</h4><p>内置的颜色选择器。安装完成后，只要按下Ctrl / Cmd + Shift + C 快捷键即可使用。</p>
<h4 id="SublimeREPL"><a href="#SublimeREPL" class="headerlink" title="SublimeREPL"></a>SublimeREPL</h4><p>SublimeREPL 可以在 Sublime Text 中运行各种语言（NodeJS ， Python，Ruby， Scala 和 Haskell 等等）。</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>编辑器，Sublime</tag>
      </tags>
  </entry>
  <entry>
    <title>Flex布局和Grid布局</title>
    <url>/2020/02/29/Flex%E5%B8%83%E5%B1%80%E5%92%8CGrid%E5%B8%83%E5%B1%80/</url>
    <content><![CDATA[<h2 id="Flex布局（弹性布局）"><a href="#Flex布局（弹性布局）" class="headerlink" title="Flex布局（弹性布局）"></a>Flex布局（弹性布局）</h2><p>Flex是弹性布局，用来为盒状模型提供最大的灵活性，任何一个容器都可以指定为Flex布局。行内元素也可以使用Flex布局。</p>
<p>采用Flex布局的元素，称为Flex容器。flex item项目是Flex布局的元素，简称项目。</p>
<p>容器：水平的主轴（main axis）和垂直的交叉轴（cross axis），单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。</p>
<h3 id="容器的属性："><a href="#容器的属性：" class="headerlink" title="容器的属性："></a>容器的属性：</h3><h4 id="flex-direction"><a href="#flex-direction" class="headerlink" title="flex-direction"></a>flex-direction</h4><p>决定主轴的方向（即项目的排列方向），注意main-size的位置和主轴方向一致。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">.box &#123;flex-direction：<span class="keyword">row</span>（<span class="keyword">row</span>-<span class="keyword">reverse</span>、<span class="keyword">column</span>、<span class="keyword">column</span>-<span class="keyword">reverse</span>）；&#125;</span><br><span class="line"><span class="keyword">row</span>（默认值）：主轴为水平方向，起点在左端。</span><br><span class="line"></span><br><span class="line"><span class="keyword">row</span>-<span class="keyword">reverse</span>：主轴为水平方向，起点在右端。</span><br><span class="line"></span><br><span class="line"><span class="keyword">column</span>：主轴为垂直方向，起点在上沿。</span><br><span class="line"></span><br><span class="line"><span class="keyword">column</span>-<span class="keyword">reverse</span>：主轴为垂直方向，起点在下沿</span><br></pre></td></tr></table></figure>

<h4 id="flex-wrap：换行（如何换行）"><a href="#flex-wrap：换行（如何换行）" class="headerlink" title="flex-wrap：换行（如何换行）"></a>flex-wrap：换行（如何换行）</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">.box&#123;flex-<span class="built_in">wrap</span>：nowrap（<span class="built_in">wrap</span>、<span class="built_in">wrap</span>-<span class="built_in">reverse</span>）&#125;</span><br><span class="line"></span><br><span class="line">nowrap：不换行。</span><br><span class="line"></span><br><span class="line"><span class="built_in">wrap</span>：换行，第一行在上方。</span><br><span class="line"></span><br><span class="line"><span class="built_in">wrap</span>-<span class="built_in">reverse</span>：换行，第一行在下方</span><br></pre></td></tr></table></figure>

<h4 id="justify-content：定义项目在主轴上的对齐方式"><a href="#justify-content：定义项目在主轴上的对齐方式" class="headerlink" title="justify-content：定义项目在主轴上的对齐方式"></a>justify-content：定义项目在主轴上的对齐方式</h4><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">.box&#123;justify-content：flex-start（flex-<span class="keyword">end</span>、center、<span class="literal">space</span>-<span class="keyword">between</span>、<span class="literal">space</span>-<span class="keyword">around</span>）&#125;</span><br><span class="line"></span><br><span class="line">flex-start（默认值）：左对齐</span><br><span class="line"></span><br><span class="line">center：居中</span><br><span class="line"></span><br><span class="line"><span class="literal">space</span>-<span class="keyword">between</span>：两端对齐，项目之间的间隔都相等</span><br><span class="line"></span><br><span class="line"><span class="literal">space</span>-<span class="keyword">around</span>：每个项目两侧的间隔相等，所有，项目之间的间隔比项目与边框的间隔大一倍</span><br></pre></td></tr></table></figure>

<h4 id="align-items：定义项目在交叉轴上如何对齐"><a href="#align-items：定义项目在交叉轴上如何对齐" class="headerlink" title="align-items：定义项目在交叉轴上如何对齐"></a>align-items：定义项目在交叉轴上如何对齐</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;<span class="attribute">align-items</span>：<span class="attribute">flex</span>-start（<span class="attribute">flex</span>-end，center、baseline、stretch）&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">flex</span>-start：交叉轴的起点对齐</span><br><span class="line"></span><br><span class="line"><span class="attribute">flex</span>-end：交叉轴的终点对齐</span><br><span class="line"></span><br><span class="line">center：交叉轴的中点对齐</span><br><span class="line"></span><br><span class="line">baseline：项目的第一行文字的基线对齐</span><br></pre></td></tr></table></figure>

<h4 id="algin-content：定义了多根轴线的对齐方式，如果项目只有一根轴线，该属性不起作用"><a href="#algin-content：定义了多根轴线的对齐方式，如果项目只有一根轴线，该属性不起作用" class="headerlink" title="algin-content：定义了多根轴线的对齐方式，如果项目只有一根轴线，该属性不起作用"></a>algin-content：定义了多根轴线的对齐方式，如果项目只有一根轴线，该属性不起作用</h4><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">.box&#123;align-content：flex-start（flex-<span class="keyword">end</span>、center、stretch、<span class="literal">space</span>-<span class="keyword">between</span>、<span class="literal">space</span>-<span class="keyword">around</span>）&#125;</span><br><span class="line"></span><br><span class="line">flex-start：与交叉轴的起点对齐。</span><br><span class="line"></span><br><span class="line">flex-<span class="keyword">end</span>：与交叉轴的终点对齐。</span><br><span class="line"></span><br><span class="line">center：与交叉轴的终点对齐。</span><br><span class="line"></span><br><span class="line"><span class="literal">space</span>-<span class="keyword">between</span>：与交叉轴两端对齐，轴线之间的间隔平均分布</span><br><span class="line"></span><br><span class="line"><span class="literal">space</span>-<span class="keyword">around</span>：每根轴线两侧的间隔都相等。</span><br><span class="line"></span><br><span class="line">stretch（默认值）：轴线占满整个交叉轴。</span><br></pre></td></tr></table></figure>

<h4 id="项目的属性"><a href="#项目的属性" class="headerlink" title="项目的属性"></a>项目的属性</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1</span>、order：定义项目的排列顺序，数值越小，排列越靠前，默认<span class="number">0</span>,。</span><br><span class="line"></span><br><span class="line">.item&#123;order：&lt;<span class="built_in">int</span>eger&gt;；&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、flex-grow：定义项目的放大比例，默认为<span class="number">0</span>，即如果存在剩余空间，也不放大。</span><br><span class="line"></span><br><span class="line">.item&#123;flex-grow：&lt;number&gt;；&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、flex-shrink：定义了项目的缩小比例，默认为<span class="number">1</span>，即空间不足，该项目缩小，如果所有项目的flex-shrink属性都为<span class="number">1</span>，当空间不足时，都将等比例缩小，如果一个项目的flex-shrink</span><br><span class="line"></span><br><span class="line">属性为<span class="number">0</span>，其他项目都为<span class="number">1</span>，则空间不足时，前者不缩小，负数对该属性无效。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、flex-basis：定义了在分配多余空间之前，项目占据的主轴空间，浏览器根据这个属性，计算主轴是否有多余空间，它的默认值为<span class="built_in">auto</span>，即项目的本来大小。</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、align-self：允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性，默认值为<span class="built_in">auto</span>，表示继承父元素的align-items属性，如果没有父元素，则等于stretch。</span><br></pre></td></tr></table></figure>

<h2 id="Grid-布局-，网格布局"><a href="#Grid-布局-，网格布局" class="headerlink" title="Grid 布局 ，网格布局"></a>Grid 布局 ，网格布局</h2><p>Grid布局与Flex布局有一定的相似性，都可以指定，容器内部多个项目的位置</p>
<p>Flex布局：轴线布局，可以看做是一维布局。</p>
<p>Grid布局：则是将容器划分分成“行”和“列”，产生单元格，指定的项目所在的单元格，可以看做是二维布局。</p>
<h4 id="grid-template-columns-row-属性"><a href="#grid-template-columns-row-属性" class="headerlink" title="grid-template-columns/row 属性"></a>grid-template-columns/row 属性</h4><figure class="highlight excel"><table><tr><td class="code"><pre><span class="line"><span class="built_in">columns</span>  是定义了每一列的宽</span><br><span class="line"></span><br><span class="line"><span class="built_in">row</span>  是定义了每一行的高</span><br></pre></td></tr></table></figure>
<h4 id="repeat-两个参数-重复n次，重复的值"><a href="#repeat-两个参数-重复n次，重复的值" class="headerlink" title="repeat()  两个参数  (重复n次，重复的值)"></a>repeat()  两个参数  (重复n次，重复的值)</h4><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line"> .<span class="built_in">box</span>&#123;</span><br><span class="line"></span><br><span class="line">　　<span class="built_in">display</span>：<span class="built_in">grid</span>；</span><br><span class="line"></span><br><span class="line">　　<span class="built_in">grid</span>-template-<span class="built_in">columns</span>：repeat（<span class="number">3</span>，<span class="number">33.33</span><span class="symbol">%</span>）</span><br><span class="line"></span><br><span class="line">　　<span class="built_in">grid</span>-template-<span class="built_in">row</span>：repeat（<span class="number">3</span>，<span class="number">33.33</span><span class="symbol">%</span>）</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="可以给网格线起名字"><a href="#可以给网格线起名字" class="headerlink" title="可以给网格线起名字"></a>可以给网格线起名字</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"></span><br><span class="line">　　<span class="attribute">display</span>：grid；</span><br><span class="line"></span><br><span class="line">　　grid-template-<span class="attribute">columns</span>：<span class="selector-attr">[ ]</span>  100px  <span class="selector-attr">[ ]</span>  100px  <span class="selector-attr">[ ]</span>  100px  <span class="selector-attr">[ ]</span></span><br><span class="line"></span><br><span class="line">　　grid-template-row：<span class="selector-attr">[ ]</span>  100px  <span class="selector-attr">[ ]</span>  100px  <span class="selector-attr">[ ]</span>  100px  <span class="selector-attr">[ ]</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="grid-row-gap属性，grid-columns-gap属性"><a href="#grid-row-gap属性，grid-columns-gap属性" class="headerlink" title="grid-row-gap属性，grid-columns-gap属性"></a>grid-row-gap属性，grid-columns-gap属性</h4><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">grid</span>-<span class="built_in">row</span>-gap设置行与行的间隔（行间距）、</span><br><span class="line"></span><br><span class="line"><span class="built_in">grid</span>-<span class="built_in">columns</span>-gap设置列与列的间隔（列间距）</span><br></pre></td></tr></table></figure>
<h4 id="网格布局允许指定区域（area），一个区域由单个或者多个单元格组成"><a href="#网格布局允许指定区域（area），一个区域由单个或者多个单元格组成" class="headerlink" title="网格布局允许指定区域（area），一个区域由单个或者多个单元格组成"></a>网格布局允许指定区域（area），一个区域由单个或者多个单元格组成</h4><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">grid-templace-area：<span class="selector-tag">header</span>  <span class="selector-tag">header</span>  header</span><br><span class="line"></span><br><span class="line">　　　　　　　　　  main      main     sidebar</span><br><span class="line"></span><br><span class="line">  　　　　　　　　　<span class="selector-tag">footer</span>    <span class="selector-tag">footer</span>     footer</span><br></pre></td></tr></table></figure>
<h4 id="justify-items，align-items，place-items-属性"><a href="#justify-items，align-items，place-items-属性" class="headerlink" title="justify-items，align-items，place-items 属性"></a>justify-items，align-items，place-items 属性</h4><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">justify</span>-<span class="keyword">items </span>设置单元格内容的水平位置</span><br><span class="line"></span><br><span class="line"><span class="symbol">align</span>-<span class="keyword">items </span>设置单元格内容的垂直位置</span><br></pre></td></tr></table></figure>
<h4 id="justify-content，align-content，place-content"><a href="#justify-content，align-content，place-content" class="headerlink" title="justify-content，align-content，place-content"></a>justify-content，align-content，place-content</h4><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">justify-<span class="built_in">content</span> 整个内容区域在容器里面的水平位置</span><br><span class="line"></span><br><span class="line">align-<span class="built_in">content</span> 整个内容区域在容器里面的垂直位置</span><br></pre></td></tr></table></figure>
<h4 id="grid-auto-columns，grid-auto-rows属性"><a href="#grid-auto-columns，grid-auto-rows属性" class="headerlink" title="grid-auto-columns，grid-auto-rows属性"></a>grid-auto-columns，grid-auto-rows属性</h4>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>vue环境配置</title>
    <url>/2020/02/26/vue%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="关于vue"><a href="#关于vue" class="headerlink" title="关于vue"></a>关于vue</h2><p>Vue.js（读音 /vjuː/, 类似于 view） 是一套构建用户界面的 渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层，并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和 Vue 生态系统支持的库开发的复杂单页应用。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。</p>
<h2 id="关于NodeJS"><a href="#关于NodeJS" class="headerlink" title="关于NodeJS"></a>关于NodeJS</h2><p>Node.js是一个运行在chromeJavascript运行环境下（俗称GoogleV8引擎）的开发平台，用来方便快捷的创建服务器端网络应用程序，也可以把它理解为一个轻量级的JSP或PHP环境，如果用来开发Web应用的话，有时要便捷很多。<br>node.js的最大优点是处理并行访问，如果一个web应用程序同时会有很多访问连接，就能体现使用node.js的优势。<br>另一个好处是，使用javascript作为服务器端脚本语言，可以消除一些与浏览器端js脚本的冲突。甚至发挥javascript动态编程的特性，在服务器与浏览器之间建立直接的动态程序。</p>
<h2 id="vue环境配置"><a href="#vue环境配置" class="headerlink" title="vue环境配置"></a>vue环境配置</h2><h5 id="1-安装NodeJS"><a href="#1-安装NodeJS" class="headerlink" title="1.安装NodeJS"></a>1.安装NodeJS</h5><p><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a><br>下载并安装NodeJS，命令行输入</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br></pre></td></tr></table></figure>
<p>显示版本号则安装成功<br>NPM安装过慢可以使用淘宝镜像</p>
<figure class="highlight tcl"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --<span class="keyword">registry</span>=<span class="keyword">http</span>://<span class="keyword">registry</span>.npm.taobao.org</span><br></pre></td></tr></table></figure>
<h5 id="2-安装Vue命令行工具-vue-cli"><a href="#2-安装Vue命令行工具-vue-cli" class="headerlink" title="2.安装Vue命令行工具 vue-cli"></a>2.安装Vue命令行工具 vue-cli</h5><p>在输入淘宝镜像后输入</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">cnpm <span class="keyword">install</span> <span class="comment">--global vue-cli</span></span><br></pre></td></tr></table></figure>
<h5 id="3-安装webpack"><a href="#3-安装webpack" class="headerlink" title="3.安装webpack"></a>3.安装webpack</h5><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">cnpm <span class="keyword">install</span> webpack -g</span><br></pre></td></tr></table></figure>
<h5 id="4、创建vue项目工程"><a href="#4、创建vue项目工程" class="headerlink" title="4、创建vue项目工程"></a>4、创建vue项目工程</h5><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">vue</span> <span class="string">init webpack vue-demo</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cd</span> <span class="string">vue-demo</span></span><br><span class="line"></span><br><span class="line"><span class="attr">npm</span> <span class="string">install //安装项目依赖</span></span><br><span class="line"></span><br><span class="line"><span class="attr">npm</span> <span class="string">run dev //运行项目，ctrl+c/control+c退出运行</span></span><br></pre></td></tr></table></figure>
<h5 id="5、查看项目结构"><a href="#5、查看项目结构" class="headerlink" title="5、查看项目结构"></a>5、查看项目结构</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">main.js         入口文件，主要作用是初始化vue实例并使用需要的插件</span><br><span class="line">App.vue         主组件</span><br><span class="line">index.html      文件入口</span><br><span class="line">src             放置组件和入口文件</span><br><span class="line">node_modules    依赖的模块</span><br><span class="line">config          配置文件</span><br><span class="line">build           webpack的基本配置、开发环境配置、生产环境配置等</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>环境配置</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/02/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
